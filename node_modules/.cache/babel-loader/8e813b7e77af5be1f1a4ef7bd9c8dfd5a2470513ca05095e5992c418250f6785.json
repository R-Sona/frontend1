{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_projects\\\\notemaker\\\\frontend\\\\src\\\\screens\\\\CreateNote\\\\CreateNote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Errormessage\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateNote(_ref) {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const dispatch = useDispatch();\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    loading,\n    error,\n    note\n  } = noteCreate;\n  console.log(note);\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Create a Note\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Create a new Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              value: title,\n              placeholder: \"Enter the title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: content,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), content && /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Note Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              value: category,\n              placeholder: \"Enter the Category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            onClick: resetHandler,\n            variant: \"danger\",\n            children: \"Reset Feilds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Creating on - \", new Date().toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateNote, \"ZG6j9pzvpIw8rG/RpnNouBo+dH4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useEffect","useState","MainScreen","Button","Card","Form","createNoteAction","Loading","ReactMarkdown","useDispatch","useSelector","ErrorMessage","jsxDEV","_jsxDEV","CreateNote","_ref","_s","history","title","setTitle","content","setContent","category","setCategory","dispatch","noteCreate","state","loading","error","note","console","log","resetHandler","submitHandler","e","preventDefault","push","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","variant","Group","controlId","Label","Control","type","value","placeholder","onChange","target","as","rows","size","className","onClick","Footer","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/React_projects/notemaker/frontend/src/screens/CreateNote/CreateNote.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { createNoteAction } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Errormessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nfunction CreateNote({ history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error, note } = noteCreate;\r\n\r\n  console.log(note);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createNoteAction(title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter the Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}