{"ast":null,"code":"import axios from \"axios\";\nimport { NOTES_LIST_FAIL, NOTES_LIST_REQUEST, NOTES_LIST_SUCCESS, NOTES_CREATE_FAIL, NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS } from \"../constants/notesConstants\";\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/notes`, config);\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createNoteAction = (title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/notes/create`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateNoteAction = (id, title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/notes/${id}`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteNoteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/notes/${id}`, config);\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","NOTES_LIST_FAIL","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_CREATE_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_DELETE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","listNotes","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createNoteAction","title","content","category","post","updateNoteAction","id","put","deleteNoteAction","delete"],"sources":["D:/React_projects/notemaker/frontend/src/actions/notesActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNoteAction =\r\n  (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/notes/create`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateNoteAction =\r\n  (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/notes/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}