{"ast":null,"code":"var _s = $RefreshSig$();\n// // import React, { useEffect, useState } from \"react\";\n// // import MainScreen from \"../../components/MainScreen\";\n// // import axios from \"axios\";\n// // import { Button, Card, Form } from \"react-bootstrap\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\n// // import ErrorMessage from \"../../components/Errormessage\";\n// // import Loading from \"../../components/Loading\";\n// // import ReactMarkdown from \"react-markdown\";\n\n// import React, { useEffect, useState } from \"react\";\n// import MainScreen from \"../components/MainScreen\";\n// import { Button, Card, Form } from \"react-bootstrap\";\n// import Loading from \"../components/Loading\";\n// import ReactMarkdown from \"react-markdown\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// import ErrorMessage from \"../components/Errormessage\";\n// import axios from \"axios\";\n// import { deleteNoteAction, updateNoteAction } from \"../actions/notesActions\";\n// import { Navigate } from \"react-router-dom\";\n\n// //import { Navigate, useNavigate } from \"react-router-dom\";\n// function SingleNote({ match }) {\n//   const [title, setTitle] = useState();\n//   const [content, setContent] = useState();\n//   const [category, setCategory] = useState();\n//   const [date, setDate] = useState(\"\");\n\n//   const dispatch = useDispatch();\n\n//   const noteUpdate = useSelector((state) => state.noteUpdate);\n//   const { loading, error } = noteUpdate;\n\n//   // const noteDelete = useSelector((state) => state.noteDelete);\n//   // const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n//   // const deleteHandler = (id) => {\n//   //   if (window.confirm(\"Are you sure?\")) {\n//   //     dispatch(deleteNoteAction(id));\n//   //   }\n//   //   Navigate(\"/mynotes\");\n//   // };\n\n//   useEffect(() => {\n//     const fetching = async () => {\n//       const { data } = await axios.get(`/api/notes/${match.params.id}`);\n//       console.log(data);\n//       setTitle(data.title);\n//       setContent(data.content);\n//       setCategory(data.category);\n//       setDate(date.UpdatedAt);\n//     };\n//     fetching();\n//   }, [match.params.id, date]);\n\n//   const resetHandler = () => {\n//     setTitle(\"\");\n//     setCategory(\"\");\n//     setContent(\"\");\n//   };\n\n//   const updateHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(updateNoteAction(match.params.id, title, content, category));\n//     if (!title || !content || !category) return;\n\n//     resetHandler();\n//     Navigate(\"/mynotes\");\n//   };\n\n//   return (\n//     <MainScreen title=\"Edit Note\">\n//       <Card>\n//         <Card.Header>Edit your Note</Card.Header>\n//         <Card.Body>\n//           <Form onSubmit={updateHandler}>\n//             {/* {loadingDelete && <Loading />} */}\n//             {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n//             {/* {errorDelete && (\n//               <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n//             )} */}\n//             <Form.Group controlId=\"title\">\n//               <Form.Label>Title</Form.Label>\n//               <Form.Control\n//                 type=\"title\"\n//                 placeholder=\"Enter the title\"\n//                 value={title}\n//                 onChange={(e) => setTitle(e.target.value)}\n//               />\n//             </Form.Group>\n\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Content</Form.Label>\n//               <Form.Control\n//                 as=\"textarea\"\n//                 placeholder=\"Enter the content\"\n//                 rows={4}\n//                 value={content}\n//                 onChange={(e) => setContent(e.target.value)}\n//               />\n//             </Form.Group>\n//             {content && (\n//               <Card>\n//                 <Card.Header>Note Preview</Card.Header>\n//                 <Card.Body>\n//                   <ReactMarkdown>{content}</ReactMarkdown>\n//                 </Card.Body>\n//               </Card>\n//             )}\n\n//             <Form.Group controlId=\"content\">\n//               <Form.Label>Category</Form.Label>\n//               <Form.Control\n//                 type=\"content\"\n//                 placeholder=\"Enter the Category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               />\n//             </Form.Group>\n//             {loading && <Loading size={50} />}\n//             <Button\n//               variant=\"primary\"\n//               type=\"submit\"\n//               onClick={() => updateHandler(match.params.id)}\n//             >\n//               Update Note\n//             </Button>\n//             <Button\n//               className=\"mx-2\"\n//               variant=\"danger\"\n//               //onClick={() => deleteHandler(match.params.id)}\n//             >\n//               Delete Note\n//             </Button>\n//           </Form>\n//         </Card.Body>\n\n//         {\n//           <Card.Footer className=\"text-muted\">\n//             Updated on - {date.substring(0, 10)}\n//           </Card.Footer>\n//         }\n//       </Card>\n//     </MainScreen>\n//   );\n// }\n\n// export default SingleNote;\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../components/MainScreen\";\nimport axios from \"axios\";\nimport { button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateNoteAction } from \"../actions/notesActions\";\nimport ErrorMessage from \"../components/Errormessage\";\nimport Loading from \"../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\nfunction SingleNote(_ref) {\n  _s();\n  let {\n    match\n  } = _ref;\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n}\n_s(SingleNote, \"Wl/hINJz2olvKY2QWjq/AroYQ6o=\");\n_c = SingleNote;\nvar _c;\n$RefreshReg$(_c, \"SingleNote\");","map":{"version":3,"names":["React","useEffect","useState","MainScreen","axios","button","Card","Form","useDispatch","useSelector","updateNoteAction","ErrorMessage","Loading","ReactMarkdown","SingleNote","_ref","_s","match","title","setTitle","content","setContent","category","setCategory","date","setDate","_c","$RefreshReg$"],"sources":["D:/React_projects/notemaker/frontend/src/Singlenote/SingleNote.js"],"sourcesContent":["// // import React, { useEffect, useState } from \"react\";\r\n// // import MainScreen from \"../../components/MainScreen\";\r\n// // import axios from \"axios\";\r\n// // import { Button, Card, Form } from \"react-bootstrap\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\r\n// // import ErrorMessage from \"../../components/Errormessage\";\r\n// // import Loading from \"../../components/Loading\";\r\n// // import ReactMarkdown from \"react-markdown\";\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import MainScreen from \"../components/MainScreen\";\r\n// import { Button, Card, Form } from \"react-bootstrap\";\r\n// import Loading from \"../components/Loading\";\r\n// import ReactMarkdown from \"react-markdown\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { useSelector } from \"react-redux\";\r\n// import ErrorMessage from \"../components/Errormessage\";\r\n// import axios from \"axios\";\r\n// import { deleteNoteAction, updateNoteAction } from \"../actions/notesActions\";\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// //import { Navigate, useNavigate } from \"react-router-dom\";\r\n// function SingleNote({ match }) {\r\n//   const [title, setTitle] = useState();\r\n//   const [content, setContent] = useState();\r\n//   const [category, setCategory] = useState();\r\n//   const [date, setDate] = useState(\"\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const noteUpdate = useSelector((state) => state.noteUpdate);\r\n//   const { loading, error } = noteUpdate;\r\n\r\n//   // const noteDelete = useSelector((state) => state.noteDelete);\r\n//   // const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n//   // const deleteHandler = (id) => {\r\n//   //   if (window.confirm(\"Are you sure?\")) {\r\n//   //     dispatch(deleteNoteAction(id));\r\n//   //   }\r\n//   //   Navigate(\"/mynotes\");\r\n//   // };\r\n\r\n//   useEffect(() => {\r\n//     const fetching = async () => {\r\n//       const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n//       console.log(data);\r\n//       setTitle(data.title);\r\n//       setContent(data.content);\r\n//       setCategory(data.category);\r\n//       setDate(date.UpdatedAt);\r\n//     };\r\n//     fetching();\r\n//   }, [match.params.id, date]);\r\n\r\n//   const resetHandler = () => {\r\n//     setTitle(\"\");\r\n//     setCategory(\"\");\r\n//     setContent(\"\");\r\n//   };\r\n\r\n//   const updateHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(updateNoteAction(match.params.id, title, content, category));\r\n//     if (!title || !content || !category) return;\r\n\r\n//     resetHandler();\r\n//     Navigate(\"/mynotes\");\r\n//   };\r\n\r\n//   return (\r\n//     <MainScreen title=\"Edit Note\">\r\n//       <Card>\r\n//         <Card.Header>Edit your Note</Card.Header>\r\n//         <Card.Body>\r\n//           <Form onSubmit={updateHandler}>\r\n//             {/* {loadingDelete && <Loading />} */}\r\n//             {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n//             {/* {errorDelete && (\r\n//               <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n//             )} */}\r\n//             <Form.Group controlId=\"title\">\r\n//               <Form.Label>Title</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"title\"\r\n//                 placeholder=\"Enter the title\"\r\n//                 value={title}\r\n//                 onChange={(e) => setTitle(e.target.value)}\r\n//               />\r\n//             </Form.Group>\r\n\r\n//             <Form.Group controlId=\"content\">\r\n//               <Form.Label>Content</Form.Label>\r\n//               <Form.Control\r\n//                 as=\"textarea\"\r\n//                 placeholder=\"Enter the content\"\r\n//                 rows={4}\r\n//                 value={content}\r\n//                 onChange={(e) => setContent(e.target.value)}\r\n//               />\r\n//             </Form.Group>\r\n//             {content && (\r\n//               <Card>\r\n//                 <Card.Header>Note Preview</Card.Header>\r\n//                 <Card.Body>\r\n//                   <ReactMarkdown>{content}</ReactMarkdown>\r\n//                 </Card.Body>\r\n//               </Card>\r\n//             )}\r\n\r\n//             <Form.Group controlId=\"content\">\r\n//               <Form.Label>Category</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"content\"\r\n//                 placeholder=\"Enter the Category\"\r\n//                 value={category}\r\n//                 onChange={(e) => setCategory(e.target.value)}\r\n//               />\r\n//             </Form.Group>\r\n//             {loading && <Loading size={50} />}\r\n//             <Button\r\n//               variant=\"primary\"\r\n//               type=\"submit\"\r\n//               onClick={() => updateHandler(match.params.id)}\r\n//             >\r\n//               Update Note\r\n//             </Button>\r\n//             <Button\r\n//               className=\"mx-2\"\r\n//               variant=\"danger\"\r\n//               //onClick={() => deleteHandler(match.params.id)}\r\n//             >\r\n//               Delete Note\r\n//             </Button>\r\n//           </Form>\r\n//         </Card.Body>\r\n\r\n//         {\r\n//           <Card.Footer className=\"text-muted\">\r\n//             Updated on - {date.substring(0, 10)}\r\n//           </Card.Footer>\r\n//         }\r\n//       </Card>\r\n//     </MainScreen>\r\n//   );\r\n// }\r\n\r\n// export default SingleNote;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateNoteAction } from \"../actions/notesActions\";\r\nimport ErrorMessage from \"../components/Errormessage\";\r\nimport Loading from \"../components/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction SingleNote({ match }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AACpD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,aAAa,MAAM,gBAAgB;AAE1C,SAASC,UAAUA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC3B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,EAAE;EACpC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,EAAE;EACxC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,EAAE;EAC1C,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;AACtC;AAACc,EAAA,CALQF,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}